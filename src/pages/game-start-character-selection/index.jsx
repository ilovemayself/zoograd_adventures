import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import Icon from 'components/AppIcon';
import Image from 'components/AppImage';
import CharacterCard from './components/CharacterCard';
import GameLogo from './components/GameLogo';
import ActionButtons from './components/ActionButtons';
import SettingsPanel from './components/SettingsPanel';

const GameStartCharacterSelection = () => {
  const navigate = useNavigate();
  const [selectedCharacter, setSelectedCharacter] = useState(null);
  const [showSettings, setShowSettings] = useState(false);
  const [gameState, setGameState] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const [showCharacterIntro, setShowCharacterIntro] = useState(false);

  // Mock character data
  const characters = [
    {
      id: 1,
      name: "–•–∞–º–µ–ª–µ–æ–Ω –•–æ–º–∞",
      profession: "–î–µ—Ç–µ–∫—Ç–∏–≤",
      ability: "–ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞",
      description: "–ú–æ–∂–µ—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –Ω–µ–≤–∏–¥–∏–º—ã–º –¥–ª—è —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–µ–ª",
      avatar: "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=400&fit=crop&crop=face",
      color: "#22C55E",
      personality: "–û—Å—Ç–æ—Ä–æ–∂–Ω—ã–π –∏ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω—ã–π",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç —Ç–∏—Ö–æ –∏ –∑–∞–≥–∞–¥–æ—á–Ω–æ"
    },
    {
      id: 2,
      name: "–ë–æ–±—Ä –ë–æ—Ä–∏—Å",
      profession: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å",
      ability: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
      description: "–ú–∞—Å—Ç–µ—Ä –ø–æ —Ä–µ–º–æ–Ω—Ç—É –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É",
      avatar: "https://images.unsplash.com/photo-1551024506-0bccd828d307?w=400&h=400&fit=crop&crop=face",
      color: "#8B4513",
      personality: "–¢—Ä—É–¥–æ–ª—é–±–∏–≤—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç —á–µ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É"
    },
    {
      id: 3,
      name: "–°–æ–≤–∞ –°–æ—Ñ–∏—è",
      profession: "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å",
      ability: "–ù–æ—á–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ",
      description: "–í–∏–¥–∏—Ç –≤ —Ç–µ–º–Ω–æ—Ç–µ –∏ –∑–Ω–∞–µ—Ç –≤—Å–µ —Å–µ–∫—Ä–µ—Ç—ã",
      avatar: "https://images.unsplash.com/photo-1518717758536-85ae29035b6d?w=400&h=400&fit=crop&crop=face",
      color: "#6366F1",
      personality: "–ú—É–¥—Ä–∞—è –∏ —Ç–µ—Ä–ø–µ–ª–∏–≤–∞—è",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç –º–µ–¥–ª–µ–Ω–Ω–æ –∏ –æ–±–¥—É–º–∞–Ω–Ω–æ"
    },
    {
      id: 4,
      name: "–õ–∏—Å–∞ –õ–∞—Ä–∏—Å–∞",
      profession: "–ü–æ—á—Ç–∞–ª—å–æ–Ω",
      ability: "–ë—ã—Å—Ç—Ä—ã–π –±–µ–≥",
      description: "–°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –≥–æ—Ä–æ–¥–µ",
      avatar: "https://images.unsplash.com/photo-1474511320723-9a56873867b5?w=400&h=400&fit=crop&crop=face",
      color: "#F97316",
      personality: "–≠–Ω–µ—Ä–≥–∏—á–Ω–∞—è –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç –±—ã—Å—Ç—Ä–æ –∏ –≤–µ—Å–µ–ª–æ"
    },
    {
      id: 5,
      name: "–ú–µ–¥–≤–µ–¥—å –ú–∏—Ö–∞–∏–ª",
      profession: "–ü–æ–≤–∞—Ä",
      ability: "–°—É–ø–µ—Ä-—Å–∏–ª–∞",
      description: "–ì–æ—Ç–æ–≤–∏—Ç –ª—É—á—à–∏–µ –±–ª—é–¥–∞ –∏ –ø–æ–¥–Ω–∏–º–∞–µ—Ç —Ç—è–∂–µ—Å—Ç–∏",
      avatar: "https://images.unsplash.com/photo-1564349683136-77e08dba1ef7?w=400&h=400&fit=crop&crop=face",
      color: "#DC2626",
      personality: "–î–æ–±—Ä—ã–π –∏ –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º–Ω—ã–π",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç –≥—Ä–æ–º–∫–æ –∏ —Å–µ—Ä–¥–µ—á–Ω–æ"
    },
    {
      id: 6,
      name: "–ö–æ—Ç –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω",
      profession: "–ú—É–∑—ã–∫–∞–Ω—Ç",
      ability: "–°—É–ø–µ—Ä-—Å–ª—É—Ö",
      description: "–°–ª—ã—à–∏—Ç —Å–∞–º—ã–µ —Ç–∏—Ö–∏–µ –∑–≤—É–∫–∏ –∏ –∏–≥—Ä–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö",
      avatar: "https://images.unsplash.com/photo-1514888286974-6c03e2ca1dba?w=400&h=400&fit=crop&crop=face",
      color: "#8B5CF6",
      personality: "–ê—Ä—Ç–∏—Å—Ç–∏—á–Ω—ã–π –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç –º–µ–ª–æ–¥–∏—á–Ω–æ"
    },
    {
      id: 7,
      name: "–ó–∞—è—Ü –ó–∞—Ö–∞—Ä",
      profession: "–ö—É—Ä—å–µ—Ä",
      ability: "–ü—Ä—ã–∂–∫–∏",
      description: "–ü—Ä—ã–≥–∞–µ—Ç –≤—ã—à–µ –≤—Å–µ—Ö –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ä–æ—á–Ω—ã–µ –ø–æ—Å—ã–ª–∫–∏",
      avatar: "https://images.unsplash.com/photo-1585110396000-c9ffd4e4b308?w=400&h=400&fit=crop&crop=face",
      color: "#10B981",
      personality: "–ù–µ—Ä–≤–Ω—ã–π –Ω–æ –Ω–∞–¥–µ–∂–Ω—ã–π",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç –±—ã—Å—Ç—Ä–æ –∏ –∑–∞–∏–∫–∞–µ—Ç—Å—è"
    },
    {
      id: 8,
      name: "–°–ª–æ–Ω –°–µ–º–µ–Ω",
      profession: "–ú—ç—Ä",
      ability: "–ü–∞–º—è—Ç—å",
      description: "–ü–æ–º–Ω–∏—Ç –≤—Å–µ –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ—Ä–æ–¥–æ–º",
      avatar: "https://images.unsplash.com/photo-1564349683136-77e08dba1ef7?w=400&h=400&fit=crop&crop=face",
      color: "#6B7280",
      personality: "–ú—É–¥—Ä—ã–π –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π",
      voicePattern: "–ì–æ–≤–æ—Ä–∏—Ç —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ"
    }
  ];

  // Check for saved game
  useEffect(() => {
    const savedGame = localStorage.getItem('zoograd-save');
    if (savedGame) {
      try {
        setGameState(JSON.parse(savedGame));
      } catch (error) {
        console.error('Error loading saved game:', error);
      }
    }
  }, []);

  const handleCharacterSelect = (character) => {
    setSelectedCharacter(character);
    setShowCharacterIntro(true);
    
    // Play character intro animation
    setTimeout(() => {
      setShowCharacterIntro(false);
    }, 3000);
  };

  const handleStartNewGame = () => {
    if (!selectedCharacter) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!');
      return;
    }

    setIsLoading(true);
    
    // Create new game state
    const newGameState = {
      selectedCharacter,
      startTime: new Date().toISOString(),
      progress: {
        level: 1,
        experience: 0,
        completedQuests: [],
        inventory: [],
        relationships: {}
      }
    };

    // Save game state
    localStorage.setItem('zoograd-save', JSON.stringify(newGameState));

    setTimeout(() => {
      navigate('/main-game-world-city-navigation');
    }, 2000);
  };

  const handleContinueGame = () => {
    if (!gameState) return;
    
    setIsLoading(true);
    setTimeout(() => {
      navigate('/main-game-world-city-navigation');
    }, 1000);
  };

  const handleSettings = () => {
    setShowSettings(true);
  };

  const handleCloseSettings = () => {
    setShowSettings(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-background via-background-200 to-background-300 relative overflow-hidden">
      {/* Background Cityscape */}
      <div className="absolute inset-0 opacity-20">
        <div className="absolute bottom-0 left-0 right-0 h-64 bg-gradient-to-t from-primary-200 to-transparent"></div>
        <div className="absolute bottom-0 left-1/4 w-16 h-32 bg-primary-300 rounded-t-lg transform -skew-x-12"></div>
        <div className="absolute bottom-0 left-1/2 w-20 h-40 bg-secondary-300 rounded-t-lg"></div>
        <div className="absolute bottom-0 right-1/4 w-12 h-28 bg-accent-300 rounded-t-lg transform skew-x-12"></div>
      </div>

      {/* Settings Button */}
      <button
        onClick={handleSettings}
        className="absolute top-4 right-4 z-20 p-3 bg-surface rounded-full shadow-warm hover:bg-surface-200 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-300"
        aria-label="–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
      >
        <Icon name="Settings" className="w-6 h-6 text-text-secondary" />
      </button>

      {/* Language Selector */}
      <div className="absolute top-4 left-4 z-20">
        <select className="bg-surface border border-border rounded-lg px-3 py-2 text-sm font-caption focus:outline-none focus:ring-2 focus:ring-primary-300">
          <option value="ru">üá∑üá∫ –†—É—Å—Å–∫–∏–π</option>
          <option value="en">üá∫üá∏ English</option>
        </select>
      </div>

      {/* Main Content */}
      <div className="relative z-10 flex flex-col min-h-screen">
        {/* Game Logo */}
        <div className="pt-8 pb-4">
          <GameLogo />
        </div>

        {/* Character Selection */}
        <div className="flex-1 px-4 pb-8">
          <div className="max-w-6xl mx-auto">
            <h2 className="font-heading text-2xl lg:text-3xl font-bold text-center text-primary mb-2">
              –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–≥–æ —Å–ø—É—Ç–Ω–∏–∫–∞
            </h2>
            <p className="text-center text-text-secondary font-body mb-8">
              –ö–∞–∂–¥—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –æ–±–ª–∞–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ –ó–æ–æ–≥—Ä–∞–¥
            </p>

            {/* Character Grid */}
            <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-4 xl:grid-cols-4 gap-4 mb-8">
              {characters.map((character) => (
                <CharacterCard
                  key={character.id}
                  character={character}
                  isSelected={selectedCharacter?.id === character.id}
                  onSelect={handleCharacterSelect}
                />
              ))}
            </div>

            {/* Selected Character Details */}
            {selectedCharacter && (
              <div className="bg-surface rounded-xl shadow-warm-lg border border-border p-6 mb-8 animate-fade-in">
                <div className="flex flex-col lg:flex-row items-center space-y-4 lg:space-y-0 lg:space-x-6">
                  <div className="w-24 h-24 rounded-full overflow-hidden shadow-warm">
                    <Image
                      src={selectedCharacter.avatar}
                      alt={selectedCharacter.name}
                      className="w-full h-full object-cover"
                    />
                  </div>
                  <div className="flex-1 text-center lg:text-left">
                    <h3 className="font-heading text-xl font-bold text-primary mb-2">
                      {selectedCharacter.name}
                    </h3>
                    <p className="text-secondary font-caption font-medium mb-2">
                      {selectedCharacter.profession} ‚Ä¢ {selectedCharacter.ability}
                    </p>
                    <p className="text-text-secondary font-body mb-2">
                      {selectedCharacter.description}
                    </p>
                    <div className="text-sm text-text-secondary">
                      <p><strong>–•–∞—Ä–∞–∫—Ç–µ—Ä:</strong> {selectedCharacter.personality}</p>
                      <p><strong>–†–µ—á—å:</strong> {selectedCharacter.voicePattern}</p>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Action Buttons */}
        <div className="pb-8 safe-area-bottom">
          <ActionButtons
            selectedCharacter={selectedCharacter}
            hasGameState={!!gameState}
            isLoading={isLoading}
            onStartNewGame={handleStartNewGame}
            onContinueGame={handleContinueGame}
          />
        </div>
      </div>

      {/* Character Intro Modal */}
      {showCharacterIntro && selectedCharacter && (
        <div className="fixed inset-0 bg-black bg-opacity-75 z-50 flex items-center justify-center p-4">
          <div className="bg-surface rounded-xl shadow-warm-xl border border-border p-8 max-w-md w-full text-center animate-fade-in">
            <div className="w-32 h-32 mx-auto mb-6 rounded-full overflow-hidden shadow-warm-lg">
              <Image
                src={selectedCharacter.avatar}
                alt={selectedCharacter.name}
                className="w-full h-full object-cover"
              />
            </div>
            <h3 className="font-heading text-2xl font-bold text-primary mb-4">
              {selectedCharacter.name}
            </h3>
            <p className="text-text-primary font-body mb-4">
              "–ü—Ä–∏–≤–µ—Ç! –Ø {selectedCharacter.name}, {selectedCharacter.profession.toLowerCase()} –ó–æ–æ–≥—Ä–∞–¥. 
              –ú–æ—è –æ—Å–æ–±–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å - {selectedCharacter.ability.toLowerCase()}. 
              –í–º–µ—Å—Ç–µ –º—ã —Å–ø–∞—Å–µ–º —Ñ–µ—Å—Ç–∏–≤–∞–ª—å!"
            </p>
            <div className="flex justify-center">
              <div className="animate-pulse">
                <Icon name="Volume2" className="w-8 h-8 text-accent" />
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Loading Screen */}
      {isLoading && (
        <div className="fixed inset-0 bg-background z-50 flex items-center justify-center">
          <div className="text-center">
            <div className="w-16 h-16 mx-auto mb-4 animate-spin">
              <Icon name="Loader" className="w-full h-full text-primary" />
            </div>
            <h3 className="font-heading text-xl font-bold text-primary mb-2">
              –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è...
            </h3>
            <p className="text-text-secondary font-body">
              –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–∏—Ä –ó–æ–æ–≥—Ä–∞–¥ –¥–ª—è –≤–∞—Å
            </p>
          </div>
        </div>
      )}

      {/* Settings Panel */}
      {showSettings && (
        <SettingsPanel onClose={handleCloseSettings} />
      )}
    </div>
  );
};

export default GameStartCharacterSelection;